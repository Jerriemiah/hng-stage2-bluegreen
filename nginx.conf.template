events {}

http {
    # JSON log format capturing upstream headers and performance data
    log_format bg_json escape=json '{"time":"$time_iso8601","remote_addr":"$remote_addr","method":"$request_method","uri":"$request_uri","status":$status,"pool":"$upstream_http_x_app_pool","release":"$upstream_http_x_release_id","upstream_status":"$upstream_status","upstream_addr":"$upstream_addr","request_time":"$request_time","upstream_response_time":"$upstream_response_time"}';


    # Upstream configuration
    upstream app_upstream {
        zone upstream_zone 64k;
        server app_blue:3000 max_fails=2 fail_timeout=5s;
        server app_green:3000 backup;
        keepalive 32;
    }

    server {
        listen 80;

        # Store logs in a shared volume accessible to the watcher
        access_log /var/log/nginx/access.log bg_json;
        error_log /var/log/nginx/error.log info;

        location / {
            proxy_pass http://app_upstream;
            proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 2;

            proxy_connect_timeout 2s;
            proxy_read_timeout 3s;
            proxy_send_timeout 3s;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Forward app headers to clients and logs
            proxy_pass_header X-App-Pool;
            proxy_pass_header X-Release-Id;
        }

        location /healthz {
            return 200 'nginx ok\n';
        }
    }
}
